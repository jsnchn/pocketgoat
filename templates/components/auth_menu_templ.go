// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.937
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "pocketgoat/templates/icons"

// AuthMenu component that handles login button, user menu, and login modal
func AuthMenu() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"authMenuData()\"><!-- Login Button when not logged in --><button x-show=\"!user\" @click=\"showLoginModal = true; otpStep = false; otpEmail = '';\" class=\"btn btn-primary\">Login</button><!-- User Avatar Menu when logged in --><div x-show=\"user\" x-cloak class=\"dropdown dropdown-end\"><div tabindex=\"0\" role=\"button\" class=\"btn btn-ghost btn-circle avatar\"><div class=\"w-10 rounded-full\"><img x-show=\"user && user.avatar\" :src=\"pb.files.getURL(user, user.avatar, { thumb: '40x40' })\" :alt=\"user?.name || user?.email\"><div x-show=\"!user || !user.avatar\" class=\"avatar placeholder\"><div class=\"bg-primary text-primary-content rounded-full w-10\"><span x-text=\"userInitial\"></span></div></div></div></div><ul tabindex=\"0\" class=\"menu menu-sm dropdown-content bg-base-100 rounded-box z-[1] mt-3 w-52 p-2 shadow border-1 border-base-300\"><li class=\"menu-title\"><span x-text=\"user?.name || 'User'\"></span> <span x-text=\"user?.email\" class=\"text-xs opacity-60\"></span></li><li><a href=\"/settings\">Settings</a></li><li><a @click=\"logout()\">Logout</a></li></ul></div><!-- Login Modal --><dialog class=\"modal\" :class=\"{ 'modal-open': showLoginModal }\" @click=\"if ($event.target === $el) showLoginModal = false\" @keydown.escape.window=\"showLoginModal = false\"><div class=\"modal-box\"><form method=\"dialog\"><button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\" @click=\"showLoginModal = false\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.X().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</button></form><h3 class=\"font-bold text-lg\">Login to your account</h3><div class=\"py-4\"><div x-show=\"!otpStep\"><button type=\"button\" @click=\"loginWithGoogle()\" class=\"btn btn-block btn-outline mb-4\"><svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.64 9.20454C17.64 8.56636 17.5827 7.95272 17.4764 7.36363H9V10.845H13.8436C13.635 11.97 13.0009 12.9231 12.0477 13.5613V15.8195H14.9564C16.6582 14.2527 17.64 11.9454 17.64 9.20454Z\" fill=\"#4285F4\"></path> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 18C11.43 18 13.4673 17.1941 14.9564 15.8195L12.0477 13.5613C11.2418 14.1013 10.2109 14.4204 9 14.4204C6.65591 14.4204 4.67182 12.8372 3.96409 10.71H0.957275V13.0418C2.43818 15.9831 5.48182 18 9 18Z\" fill=\"#34A853\"></path> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.96409 10.71C3.78409 10.17 3.68182 9.59318 3.68182 9C3.68182 8.40682 3.78409 7.83 3.96409 7.29V4.95818H0.957273C0.347727 6.17318 0 7.54773 0 9C0 10.4523 0.347727 11.8268 0.957273 13.0418L3.96409 10.71Z\" fill=\"#FBBC05\"></path> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 3.57955C10.3214 3.57955 11.5077 4.03364 12.4405 4.92545L15.0218 2.34409C13.4632 0.891818 11.4259 0 9 0C5.48182 0 2.43818 2.01682 0.957275 4.95818L3.96409 7.29C4.67182 5.16273 6.65591 3.57955 9 3.57955Z\" fill=\"#EA4335\"></path></svg> Continue with Google</button><div class=\"divider\">OR</div><form @submit.prevent=\"requestOTP($el.email.value)\"><div class=\"form-control mb-4\"><label class=\"floating-label\"><input type=\"email\" id=\"email\" name=\"email\" class=\"input input-bordered w-full\" placeholder=\"Email\" required> <span>Email</span></label></div><button type=\"submit\" class=\"btn btn-primary btn-block\">Get one-time passcode</button></form></div><div x-show=\"otpStep\" x-cloak><p class=\"mb-4\">Enter the Passcode sent to <strong x-text=\"otpEmail\" class=\"font-semibold\"></strong></p><form @submit.prevent=\"verifyOTP($el.otp.value)\"><div class=\"form-control mb-4\"><label class=\"floating-label\"><input type=\"text\" id=\"otp\" name=\"otp\" class=\"input input-bordered w-full\" placeholder=\"One-Time Passcode\" pattern=\"[0-9]{6}\" maxlength=\"6\" required autofocus> <span>One-Time Passcode</span></label></div><div class=\"flex gap-2\"><button type=\"submit\" class=\"btn btn-primary flex-1\">Verify</button> <button type=\"button\" class=\"btn btn-soft btn-primary flex-1\" @click=\"otpStep = false; otpEmail = ''\">Back</button></div></form></div></div></div></dialog></div><script>\n\t\tfunction authMenuData() {\n\t\t\treturn {\n\t\t\t\tshowLoginModal: false,\n\t\t\t\totpStep: false,\n\t\t\t\totpEmail: '',\n\t\t\t\tpb: window.$data?.pb || null,\n\t\t\t\tuser: window.$data?.user || null,\n\t\t\t\tget userInitial() {\n\t\t\t\t\tif (!this.user) return '';\n\t\t\t\t\treturn (this.user.name || this.user.email || '?')[0].toUpperCase();\n\t\t\t\t},\n\t\t\t\tinit() {\n\t\t\t\t\t// Connect to the parent Alpine data\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tconst parentData = Alpine.$data(document.body);\n\t\t\t\t\t\tif (parentData) {\n\t\t\t\t\t\t\tthis.pb = parentData.pb;\n\t\t\t\t\t\t\tthis.user = parentData.user;\n\t\t\t\t\t\t\t// Watch for auth changes\n\t\t\t\t\t\t\tthis.$watch(() => parentData.user, (newUser) => {\n\t\t\t\t\t\t\t\tthis.user = newUser;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tlogout() {\n\t\t\t\t\tconst parentData = Alpine.$data(document.body);\n\t\t\t\t\tif (parentData && parentData.logout) {\n\t\t\t\t\t\tparentData.logout();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taddToast(message, type) {\n\t\t\t\t\tconst parentData = Alpine.$data(document.body);\n\t\t\t\t\tif (parentData && parentData.addToast) {\n\t\t\t\t\t\tparentData.addToast(message, type);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tasync loginWithGoogle() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst authData = await this.pb.collection('users').authWithOAuth2({ provider: 'google' });\n\t\t\t\t\t\tthis.addToast('Successfully logged in with Google!', 'success');\n\t\t\t\t\t\tthis.showLoginModal = false;\n\t\t\t\t\t\tconsole.log('Auth data:', authData);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.addToast('Google login failed: ' + error.message, 'error');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tasync requestOTP(email) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.pb.collection('users').requestOTP(email);\n\t\t\t\t\t\tthis.otpEmail = email;\n\t\t\t\t\t\tthis.otpStep = true;\n\t\t\t\t\t\tthis.addToast('OTP sent to your email!', 'success');\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.addToast('Failed to send OTP: ' + error.message, 'error');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tasync verifyOTP(otpCode) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst authData = await this.pb.collection('users').authWithOTP(this.otpEmail, otpCode);\n\t\t\t\t\t\tthis.addToast('Successfully logged in!', 'success');\n\t\t\t\t\t\tthis.showLoginModal = false;\n\t\t\t\t\t\tthis.otpStep = false;\n\t\t\t\t\t\tthis.otpEmail = '';\n\t\t\t\t\t\tconsole.log('Auth data:', authData);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.addToast('Invalid OTP: ' + error.message, 'error');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
