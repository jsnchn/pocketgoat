// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.937
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "pocketgoat/templates/layouts"

func Settings() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\t\t\t// Extend the base layout data with settings-specific methods\n\t\t\tdocument.addEventListener('alpine:init', () => {\n\t\t\t\tAlpine.data('settingsData', () => ({\n\t\t\t\t\t...Alpine.$data(document.body),\n\t\t\t\t\tprofileLoading: false,\n\t\t\t\t\tpreferencesLoading: false,\n\t\t\t\t\tasync updateProfile(event) {\n\t\t\t\t\t\tif (!this.user) {\n\t\t\t\t\t\t\tthis.addToast('You must be logged in to update your profile', 'error');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.profileLoading = true;\n\t\t\t\t\t\tconst formData = new FormData(event.target);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Update the user record\n\t\t\t\t\t\t\tconst updatedUser = await this.pb.collection('users').update(this.user.id, {\n\t\t\t\t\t\t\t\tname: formData.get('name')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Update the local user object\n\t\t\t\t\t\t\tthis.user = updatedUser;\n\t\t\t\t\t\t\tthis.addToast('Profile updated successfully!', 'success');\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('Profile update error:', error);\n\t\t\t\t\t\t\tthis.addToast('Failed to update profile: ' + (error.message || 'Unknown error'), 'error');\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthis.profileLoading = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tasync updatePreferences(event) {\n\t\t\t\t\t\tif (!this.user) {\n\t\t\t\t\t\t\tthis.addToast('You must be logged in to update preferences', 'error');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.preferencesLoading = true;\n\t\t\t\t\t\tconst formData = new FormData(event.target);\n\t\t\t\t\t\tconst emailVisibility = formData.get('emailVisibility') === 'on';\n\t\t\t\t\t\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Update the user record\n\t\t\t\t\t\t\tconst updatedUser = await this.pb.collection('users').update(this.user.id, {\n\t\t\t\t\t\t\t\temailVisibility: emailVisibility\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Update the local user object\n\t\t\t\t\t\t\tthis.user = updatedUser;\n\t\t\t\t\t\t\tthis.addToast('Preferences saved successfully!', 'success');\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('Preferences update error:', error);\n\t\t\t\t\t\t\tthis.addToast('Failed to save preferences: ' + (error.message || 'Unknown error'), 'error');\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthis.preferencesLoading = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t</script> <div class=\"container mx-auto p-6 max-w-4xl\" x-data=\"settingsData\"><div class=\"space-y-6\"><h1 class=\"text-3xl font-bold\">Settings</h1><!-- Profile Section --><div class=\"card bg-base-100 shadow-xl border-1 border-base-300\"><div class=\"card-body space-y-4\"><h2 class=\"card-title\">Profile</h2><form @submit.prevent=\"updateProfile($event)\" class=\"space-y-8\"><div class=\"form-control\"><label class=\"floating-label\"><input type=\"text\" id=\"name\" name=\"name\" :value=\"user?.name || ''\" placeholder=\"Your display name\" class=\"input input-bordered w-full\"> <span>Display Name</span></label></div><div class=\"form-control\"><label class=\"floating-label\"><input type=\"email\" id=\"email\" name=\"email\" :value=\"user?.email || ''\" disabled class=\"input input-bordered w-full\"> <span>Email</span></label></div><div class=\"card-actions justify-end\"><button type=\"submit\" class=\"btn btn-primary\" :disabled=\"profileLoading\" :class=\"{'loading': profileLoading}\"><span x-show=\"!profileLoading\">Update Profile</span> <span x-show=\"profileLoading\">Updating...</span></button></div></form></div></div><!-- Preferences Section --><div class=\"card bg-base-100 shadow-xl border-1 border-base-300\"><div class=\"card-body space-y-4\"><h2 class=\"card-title\">Preferences</h2><form @submit.prevent=\"updatePreferences($event)\" class=\"space-y-8\"><div class=\"form-control\"><label class=\"cursor-pointer label flex flex-row gap-6\"><input type=\"checkbox\" name=\"emailVisibility\" :checked=\"user?.emailVisibility || false\" class=\"toggle toggle-primary\"><div><span class=\"label-text text-lg\">Email Visibility</span><p class=\"text-sm text-base-content/70\">Toggle on to let other users see your email address</p></div></label></div><div class=\"card-actions justify-end\"><button type=\"submit\" class=\"btn btn-primary\" :disabled=\"preferencesLoading\" :class=\"{'loading': preferencesLoading}\"><span x-show=\"!preferencesLoading\">Save Preferences</span> <span x-show=\"preferencesLoading\">Saving...</span></button></div></form></div></div><!-- Danger Zone --><div class=\"card bg-error/10 border-1 border-error shadow-xl\"><div class=\"card-body\"><h2 class=\"card-title text-2xl text-error mb-4\">Danger Zone</h2><p class=\"text-base-content/80 mb-4\">Once you delete your account, there is no going back. Please be certain.</p><div class=\"card-actions justify-end\"><button @click=\"if(confirm('Are you sure you want to delete your account? This action cannot be undone.')) { addToast('Account deletion functionality coming soon!', 'error'); }\" class=\"btn btn-error\">Delete Account</button></div></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.BaseLayout("PocketGoat - Settings").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
