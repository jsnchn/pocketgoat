// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.937
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "pocketgoat/templates/layouts"
import "pocketgoat/templates/icons"

func Home() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\t\t\t// Extend the base layout data with home-specific methods\n\t\t\tdocument.addEventListener('alpine:init', () => {\n\t\t\t\tAlpine.data('homeData', () => ({\n\t\t\t\t\t...Alpine.$data(document.body),\n\t\t\t\t\tasync testAPI() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch('/api/hello');\n\t\t\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\t\tthis.addToast(data.message || 'API call successful!', 'success');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.addToast('API call failed: ' + (data.message || 'Unknown error'), 'error');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.addToast('Network error: ' + error.message, 'error');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t</script> <section x-data=\"homeData\"><div class=\"hero\"><div class=\"hero-content text-center flex-col\"><img src=\"/static/images/logo/192x192.png\" alt=\"PocketGoat Logo\" width=\"192\" height=\"192\"><div class=\"max-w-xl\"><h1 class=\"text-5xl font-bold\">Welcome to PocketGoat</h1><p class=\"py-6\">Your pocket-sized application</p></div><button class=\"btn btn-primary\" @click=\"testAPI()\">Test API</button></div></div><!-- Setup Instructions --><div class=\"container mx-auto p-6 max-w-6xl\"><h2 class=\"text-3xl font-bold text-center mb-8\">Quick Setup Guide</h2><div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\"><!-- Google OAuth Setup --><div class=\"card bg-base-100 shadow-xl\"><div class=\"card-body\"><div><div class=\"flex items-center mb-4\"><div class=\"badge badge-primary badge-lg\">1</div><h3 class=\"card-title ml-3\">Authentication</h3></div><p class=\"mb-4\">Enable Google sign-in and OTP for your users</p></div><div class=\"divider\"></div><ol class=\"list-decimal list-inside space-y-2 text-sm\"><li>Go to <a href=\"https://console.cloud.google.com/\" target=\"_blank\" class=\"link link-primary\">Google Cloud Console</a></li><li>Create a new project or select existing</li><li>Enable Google+ API</li><li>Create OAuth 2.0 credentials</li><li>Add authorized redirect URI: <code class=\"text-xs bg-base-200 px-1 rounded\">http://localhost:8090/api/oauth2-redirect</code></li><li>Copy Client ID and Secret</li><li>Open <a href=\"http://localhost:8090/_/\" target=\"_blank\" class=\"link link-primary\">PocketBase Admin</a></li><li>Go to Users collection → Settings → Options</li><li>Disable Identity/Password</li><li>Enable one time password (OTP)</li><li>Enable OAuth2 → Add provider → Google</li><li>Paste your credentials and save</li></ol></div></div><!-- Email Service Setup --><div class=\"card bg-base-100 shadow-xl\"><div class=\"card-body\"><div><div class=\"flex items-center mb-4\"><div class=\"badge badge-primary badge-lg\">2</div><h3 class=\"card-title ml-3\">Email Service</h3></div><p class=\"mb-4\">Send transactional emails to users</p></div><div class=\"divider\"></div><ol class=\"list-decimal list-inside space-y-2 text-sm\"><li>Choose an email service:<ul class=\"list-disc list-inside ml-4 mt-1\"><li><a href=\"https://sendgrid.com\" target=\"_blank\" class=\"link link-primary\">SendGrid</a></li><li><a href=\"https://www.mailgun.com\" target=\"_blank\" class=\"link link-primary\">Mailgun</a></li><li><a href=\"https://postmarkapp.com\" target=\"_blank\" class=\"link link-primary\">Postmark</a></li></ul></li><li>Create an account and verify domain</li><li>Get SMTP credentials</li><li>Open <a href=\"http://localhost:8090/_/\" target=\"_blank\" class=\"link link-primary\">PocketBase Admin</a></li><li>Go to Settings → Mail settings</li><li>Enable mail sending</li><li>Enter SMTP details and save</li></ol></div></div><!-- Payment Processing --><div class=\"card bg-base-100 shadow-xl\"><div class=\"card-body\"><div><div class=\"flex items-center mb-4\"><div class=\"badge badge-primary badge-lg\">3</div><h3 class=\"card-title ml-3\">Payment Processing</h3></div><p class=\"mb-4\">Accept payments from customers</p></div><div class=\"divider\"></div><div class=\"space-y-4\"><div class=\"flex flex-row items-start gap-4\"><span class=\"flex-none\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = icons.Stripe().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</span><p class=\"text-sm text-base-content/70\">Integration with Stripe for credit card payments</p></div><div class=\"flex flex-row items-start gap-4\"><span class=\"size-8\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = icons.Paypal().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</span><p class=\"text-sm text-base-content/70\">Integration with PayPal for easy checkout</p></div></div><div class=\"alert alert-info mt-4\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = icons.Info().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<span class=\"text-sm\">Payment integrations will be available in the next release</span></div></div></div><div class=\"col-span-3\"><div class=\"grid grid-cols-2 gap-4\"><!-- Build it! --><div class=\"card bg-base-100 shadow-xl\"><div class=\"card-body\"><div><div class=\"flex items-center mb-4\"><div class=\"badge badge-primary badge-lg\">4</div><h3 class=\"card-title ml-3\">Build it!</h3></div><p class=\"mb-4\">Start by replacing this home page with your own content</p><div class=\"divider\"></div><p class=\"mb-4\">Check out <a href=\"https://daisyui.com\" target=\"_blank\" class=\"link link-primary\">Daisy UI</a>, <a href=\"https://pocketbase.io\" target=\"_blank\" class=\"link link-primary\">Pocketbase</a>, and <a href=\"https://github.com/pocketbase/js-sdk\" target=\"_blank\" class=\"link link-primary\">Pocketbase SDK</a> to read up on how to rapidly develop your next app.</p></div></div></div><!-- Ship it! --><div class=\"card bg-base-100 shadow-xl\"><div class=\"card-body\"><div><div class=\"flex items-center mb-4\"><div class=\"badge badge-primary badge-lg\">5</div><h3 class=\"card-title ml-3\">Ship it!</h3></div><p class=\"mb-4\">Host it anywhere because everything compiles to a single executeable</p><div class=\"divider\"></div><p class=\"mb-4\">Consider the <a href=\"https://pocketbase.io/docs/going-to-production/#using-docker\" target=\"_blank\" class=\"link link-primary\">Pocketbase deployment strategies</a>. For greatest convenience, dockerize and deploy to <a href=\"https://fly.io/docs/languages-and-frameworks/golang/#arrived-at-destination\" target=\"_blank\" class=\"link link-primary\">fly.io</a>.</p></div></div></div></div></div></div></div></section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.BaseLayout("PocketGoat - Home").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
